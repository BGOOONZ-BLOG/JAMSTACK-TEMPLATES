#!/usr/bin/env node

var Promise = require('bluebird');
var sendQueue = require('../lib/services/send-queue');
var apnQueue = require('../lib/services/apn-queue');
var models = require('../lib/models');
var logger = require('../lib/logger');
var notificationUrl = require('../lib/services/notification-url');

process.on('SIGTERM', function () {
  logger.info('Will shutdown');
  sendQueue.close()
  .then(function () {
    models.sequelize.close();
  });
});

sendQueue.pull(function (message) {
  // Ignore malformed messages.
  if (!message.notificationId)
    return Promise.resolve();

  return models.Notification.find(message.notificationId)
  .then(function (notification) {
    return notification.getWebsite()
    .then(function (website) {
      return website.getUsers();
    })
    .then(function (users) {
      users.forEach(function (user) {
        apnQueue.push({
          alert: {
            title: notification.title,
            body: notification.body,
            action: notification.action
          },
          urlArgs: [notificationUrl.format({
            userId: user.id,
            notificationId: notification.id,
            url: notification.url
          })],
          token: user.token
        });
      });
    });
  });
});
