#!/usr/bin/env node

var request = require('request');
var _ = require('lodash');
var express = require('express');
var async = require('async');
var program = require('commander');
var pkg = require('../package.json');
var debug = require('debug')('jenkins-badge');

/**
 * Parse argv.
 */

program
  .version(pkg.version)
  .option('-u, --url <url>', 'Jenkins url (http://user@password:url:port) <url>')
  .option('-p, --port [port]', 'Port (default 2323)', 2323)
  .option('--no-strict', 'Use non-strict SSL')
  .parse(process.argv);

if (! program.url) program.help();

/**
 * Return the last build of a branch from Jenkins.
 *
 * @param {string} name
 * @param {string} branch
 * @param {function} cb
 */

function queryLastBuild(name, branch, cb) {
  var url = program.url + '/job/' + name + '/lastBuild/git/api/json';

  debug('GET %s', url);

  request.get({
    url: url,
    json: true,
    strictSSL: program.strict
  }, function (err, res) {
    if (err) return cb(err);
    cb(null, _.find(res.body.buildsByBranchName, function (value, name) {
      return name.match(new RegExp('.*/?' + branch));
    }));
  });
}

/**
 * Get a custom build from jenkins.
 *
 * @param {string} name
 * @param {number} number
 * @param {function} cb
 */

function queryBuild(name, number, cb) {
  var url = program.url + '/job/' + name + '/' + number + '/api/json';

  debug('GET %s', url);

  request.get({
    url: url,
    json: true,
    strictSSL: program.strict
  }, function (err, res) {
    if (err) return cb(err);
    cb(null, res.body);
  });
}

/**
 * Get build status for a custom branch.
 *
 * @param {string} name
 * @param {string} branch
 * @param {function} cb
 */

function getBuild(name, branch, cb) {
  async.waterfall([
    queryLastBuild.bind(null, name, branch),
    function (build, next) {
      if (! build) return next(null, null);
      queryBuild(name, build.buildNumber, next);
    }
  ], cb);
}

/**
 * Create express application.
 */

var app = express();

/**
 * Badge route.
 * @example
 * /my-job-name?branch=mybranch
 */

app.get('/:name', function (req, res) {
  getBuild(req.params.name, req.query.branch || 'master', function (err, build) {
    if (err) {
      debug('ERROR', err);
      return res.redirect('http://img.shields.io/badge/jenkins-error-lightgrey.svg');
    }
    if (! build) return res.redirect('http://img.shields.io/badge/jenkins-unknown-lightgrey.svg');
    var status = build.result === 'SUCCESS' ? 'passing' : 'failing';
    var color = build.result === 'SUCCESS' ? 'brightgreen' : 'red';
    res.redirect(302, 'http://img.shields.io/badge/job-' + status + '-' + color + '.svg');
  });
});

/**
 * Listen for new request.
 */

app.listen(program.port);