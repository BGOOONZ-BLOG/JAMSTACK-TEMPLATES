steps:
  # Build the image in a single place for all parallel steps to leverage the same image.
  - name: ':docker: :package: unit'
    plugins:
      'docker-compose#v3.0.3':
        build: baseui
        image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
        env: DOCKER_BUILDKIT=1
    agents:
      queue: builders

  - name: ':docker: :package: e2e'
    plugins:
      'docker-compose#v3.0.3':
        build:
          - e2e-test
          - e2e-server
          - e2e-server-healthy
        image-repository: 027047743804.dkr.ecr.us-east-2.amazonaws.com/uber
        env: DOCKER_BUILDKIT=1
    agents:
      queue: builders

  # Wait until all images are built.
  # This way we can download the built image from a registry instead of building each for each test task.
  - wait

  # All of the commands after the wait are run in parallel.
  - name: validate-examples
    command: yarn validate:examples
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: ':typescript:'
    command: yarn tsc
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: ':eslint:'
    command: yarn lint
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: ':flowtype:'
    command: yarn flow
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: ':jest:'
    command: yarn unit-test
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: ':react: react@17 unit-test'
    command: yarn upgrade react@^17.0.1 react-dom@^17.0.1 && yarn unit-test
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: fossa
    command: 'curl https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash && fossa'
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: deploy-npm-latest
    command: 'node scripts/publish-stable-release.js'
    if: build.branch == "master" && build.message =~ /^Release v[0-9]+\.[0-9]+\.[0-9]+/
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: alpha-test-web-code
    command: 'node scripts/alpha-test-web-code.js'
    if: build.branch != "master" && build.message =~ /^Release v[0-9]+\.[0-9]+\.[0-9]+/
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: deploy-vscode
    command: './deploy-vscode.sh'
    if: build.branch == "master" && build.message =~ /^Release v[0-9]+\.[0-9]+\.[0-9]+/
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: deploy-versioned-docs
    command: './deploy-versioned-docs.sh'
    if: build.branch == "master" && build.message =~ /^Release v[0-9]+\.[0-9]+\.[0-9]+/
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: create-github-release
    command: './scripts/github-release.js'
    if: build.branch == "master" && build.message =~ /^Release v[0-9]+\.[0-9]+\.[0-9]+/
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: guard-component-sizes
    command: './scripts/component-sizes.js'
    plugins:
      'docker-compose#v3.0.3':
        run: baseui
    agents:
      queue: workers

  - name: e2e
    # we have to install puppeteer here to trigger the install.js script
    # and also to make sure we do not add this to the released build artifact
    command: yarn add puppeteer && yarn e2e:test:ci
    artifact_paths:
      - '__artifacts__/*.png'
    plugins:
      'docker-compose#v3.0.3':
        run: e2e-test
        pull:
          - e2e-server
          - e2e-server-healthy
    agents:
      queue: workers

  - name: ':react: react@17 e2e'
    # we have to install puppeteer here to trigger the install.js script
    # and also to make sure we do not add this to the released build artifact
    command: yarn add puppeteer && yarn upgrade react@^17.0.1 react-dom@^17.0.1 && yarn e2e:test:ci
    artifact_paths:
      - '__artifacts__/*.png'
    plugins:
      'docker-compose#v3.0.3':
        run: e2e-test
        pull:
          - e2e-server
          - e2e-server-healthy
    agents:
      queue: workers

  - name: vrt
    command: yarn vrt:ci
    artifact_paths:
      - '__artifacts__/*.png'
    plugins:
      'docker-compose#v3.0.3':
        run: e2e-test
        pull:
          - e2e-server
          - e2e-server-healthy
    agents:
      queue: workers
