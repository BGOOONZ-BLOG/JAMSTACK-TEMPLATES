aliases:
  - &restore-cache
    keys:
      - v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Fallback in case checksum fails
      - v2-dependencies-{{ .Branch }}-

  - &save-cache
    paths:
      - node_modules
      - website/node_modules
    key: v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &yarn-install
    run: |
      sudo npm i -g yarn@^1.2.1
      yarn --no-progress

  - &yarn-install-no-sudo
    run: |
      npm i -g yarn@^1.2.1
      yarn --no-progress

  - &deploy
    command: |
      # Deploy Jest website using Docusaurus bot
      git config --global user.email "docusaurus-bot@users.noreply.github.com"
      git config --global user.name "Website Deployment Script"
      echo "machine github.com login docusaurus-bot password $DOCUSAURUS_PUBLISH_TOKEN" > ~/.netrc
      # install Docusaurus and generate file of English strings
      yarn && cd website && yarn run write-translations
      # crowdin install
      sudo apt-get update
      sudo apt-get install default-jre rsync
      wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
      sudo dpkg -i crowdin.deb
      sleep 5
      # translations upload/download
      yarn run crowdin-upload
      yarn run crowdin-download
      # build and publish website
      GIT_USER=docusaurus-bot USE_SSH=false yarn run publish-gh-pages

version: 2
jobs:
  test-browser:
    working_directory: /home/circleci/jest
    docker:
      - image: markhobson/node-chrome
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: |
          apt-get update && apt-get install make g++ -y
      - *yarn-install-no-sudo
      - save-cache: *save-cache
      - run: yarn run test-ci-es5-build-in-browser

  test-node-9:
    working_directory: ~/jest
    docker:
      - image: circleci/node:9
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: yarn --no-progress
      - save-cache: *save-cache
      - run: yarn run test-ci-partial

  test-node-8:
    working_directory: ~/jest
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: yarn --no-progress
      - save-cache: *save-cache
      - run: yarn run test-ci

  test-node-6:
    working_directory: ~/jest
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - restore-cache: *restore-cache
      - *yarn-install
      - save-cache: *save-cache
      - run: yarn run test-ci-partial

  test-and-deploy-website:
    working_directory: ~/jest
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: yarn --no-progress
      - save-cache: *save-cache
      - deploy: *deploy

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test-node-8
      - test-node-6
      - test-node-9
      - test-browser
      - test-and-deploy-website
