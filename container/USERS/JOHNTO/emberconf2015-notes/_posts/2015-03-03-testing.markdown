---
layout: post
title:  Test-Driven Development by Example
date:   2015-03-03 17:30:20
categories:
speaker: Toran Billups
---

Not too much not taking here. Too much radical live coding.

## Acceptance test

`ember g acceptance foobar`

{% highlight javascript %}
find('table.unassigned tr.cards');
assert.equal(3);
{% endhighlight %}

Once the basic test is passing, then add a more specific test

{% highlight javascript %}
find('table.unassigned tr.cards');
assert.equal(3);
var project = find('table.unassigned tr.cards:eq(0)');
assert.equal(project.text(), 'first');
{% endhighlight %}

Then, refactor the selector

{% highlight javascript %}
find('.unassigned .cards');
assert.equal(3);
var project = find('.unassigned .cards:eq(0)');
assert.equal(project.text(), 'first');
{% endhighlight %}

Red, green, for the win.

## Unit test

{% highlight javascript %}
import { module, test } from 'qunit';
import Todo from 'path/to/todo';

module('todo');

test('it does stuff', function() {
  // Test all the things...
});
{% endhighlight %}


`ember test --server --filter="todo"`

