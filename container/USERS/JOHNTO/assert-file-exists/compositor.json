{
  "name": "johnotander/assert-file-exists",
  "version": "0.1.3",
  "libraries": {
    "xv": "^1.0.27"
  },
  "title": "assert-file-exists",
  "branch": "",
  "style": {
    "name": "Brutalist",
    "fontFamily": "Consolas, \"Liberation Mono\", Menlo, Courier, monospace",
    "heading": {},
    "typeScale": [
      48,
      32,
      20,
      18,
      16,
      14,
      12
    ],
    "colors": {
      "text": "#333",
      "background": "#fff",
      "primary": "#777",
      "secondary": "#ccc",
      "highlight": "#1f80ff",
      "muted": "#f6f6f6",
      "border": "#eee"
    }
  },
  "content": [
    {
      "component": "nav/AbsoluteNav",
      "links": [
        {
          "href": "https://github.com/johnotander/assert-file-exists",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/assert-file-exists",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header/BannerHeader",
      "heading": "assert-file-exists",
      "subhead": "Assert that a file exists",
      "links": [
        {
          "text": "Tweet",
          "href": "https://twitter.com/intent/tweet?text=assert-file-exists%253A%2520Assert%2520that%2520a%2520file%2520exists&url="
        }
      ],
      "text": "v1.0.0"
    },
    {
      "component": "article/BasicArticle",
      "text": "\n\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\">npm install --save assert-file-exists\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-javascript\">var assertFileExists = require(&apos;assert-file-exists&apos;)\n\nassertFileExists(&apos;readme.md&apos;, &apos;there is a readme&apos;)\nassertFileExists(&apos;foo&apos;, &apos;there is a foo file&apos;) // =&gt; AssertionError: there is a foo file\nassertFileExists(&apos;foo&apos;, { skipError: true }) // =&gt; false\n</code></pre>\n<h2 id=\"license\">License</h2>\n<p>MIT</p>\n<h2 id=\"contributing\">Contributing</h2>\n<ol>\n<li>Fork it</li>\n<li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li>\n<li>Commit your changes (<code>git commit -am &apos;Add some feature&apos;</code>)</li>\n<li>Push to the branch (<code>git push origin my-new-feature</code>)</li>\n<li>Create new Pull Request</li>\n</ol>\n<p>Crafted with &lt;3 by John Otander (<a href=\"https://twitter.com/4lpine\">@4lpine</a>).</p>\n<hr>\n<blockquote>\n<p>This package was initially generated with <a href=\"http://yeoman.io\">yeoman</a> and the <a href=\"https://github.com/johnotander/generator-p.git\">p generator</a>.</p>\n</blockquote>\n",
      "html": "\n\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\">npm install --save assert-file-exists\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-javascript\">var assertFileExists = require(&apos;assert-file-exists&apos;)\n\nassertFileExists(&apos;readme.md&apos;, &apos;there is a readme&apos;)\nassertFileExists(&apos;foo&apos;, &apos;there is a foo file&apos;) // =&gt; AssertionError: there is a foo file\nassertFileExists(&apos;foo&apos;, { skipError: true }) // =&gt; false\n</code></pre>\n<h2 id=\"license\">License</h2>\n<p>MIT</p>\n<h2 id=\"contributing\">Contributing</h2>\n<ol>\n<li>Fork it</li>\n<li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li>\n<li>Commit your changes (<code>git commit -am &apos;Add some feature&apos;</code>)</li>\n<li>Push to the branch (<code>git push origin my-new-feature</code>)</li>\n<li>Create new Pull Request</li>\n</ol>\n<p>Crafted with &lt;3 by John Otander (<a href=\"https://twitter.com/4lpine\">@4lpine</a>).</p>\n<hr>\n<blockquote>\n<p>This package was initially generated with <a href=\"http://yeoman.io\">yeoman</a> and the <a href=\"https://github.com/johnotander/generator-p.git\">p generator</a>.</p>\n</blockquote>\n"
    },
    {
      "component": "footer/BasicFooter",
      "links": [
        {
          "href": "https://github.com/johnotander/assert-file-exists",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/johnotander",
          "text": "johnotander"
        }
      ]
    }
  ]
}